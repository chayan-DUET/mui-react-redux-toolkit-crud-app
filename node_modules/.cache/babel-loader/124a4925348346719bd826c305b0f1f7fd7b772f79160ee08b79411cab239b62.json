{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\mui-react-redux-toolkit-crud\\\\src\\\\app\\\\views\\\\material-kit\\\\auto-complete\\\\AsyncAutocomplete.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, Fragment } from \"react\";\nimport { Autocomplete, CircularProgress, styled, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoComplete = styled(Autocomplete)(() => ({\n  width: 300\n}));\n_c = AutoComplete;\nfunction sleep(delay = 0) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\nexport default function AsyncAutocomplete() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const loading = open && options.length === 0;\n  useEffect(() => {\n    let active = true;\n    if (!loading) return;\n    (async () => {\n      // *https://www.registers.service.gov.uk/registers/country/use-the-api*\n      const response = await axios.get(\"https://country.register.gov.uk/records.json?page-size=5000\");\n      await sleep(3000); // For demo purposes.\n      const countries = await response.json();\n      if (active) {\n        setOptions(Object.keys(countries).map(key => countries[key].item[0]));\n      }\n    })();\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  useEffect(() => {\n    if (!open) setOptions([]);\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    open: open,\n    options: options,\n    loading: loading,\n    id: \"asynchronous-demo\",\n    onOpen: () => setOpen(true),\n    onClose: () => setOpen(false),\n    getOptionLabel: option => option.name,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Asynchronous\",\n      InputProps: {\n        ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AsyncAutocomplete, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n_c2 = AsyncAutocomplete;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoComplete\");\n$RefreshReg$(_c2, \"AsyncAutocomplete\");","map":{"version":3,"names":["useState","useEffect","Fragment","Autocomplete","CircularProgress","styled","TextField","axios","jsxDEV","_jsxDEV","AutoComplete","width","_c","sleep","delay","Promise","resolve","setTimeout","AsyncAutocomplete","_s","open","setOpen","options","setOptions","loading","length","active","response","get","countries","json","Object","keys","map","key","item","id","onOpen","onClose","getOptionLabel","option","name","renderInput","params","fullWidth","variant","label","InputProps","endAdornment","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["E:/react/mui-react-redux-toolkit-crud/src/app/views/material-kit/auto-complete/AsyncAutocomplete.jsx"],"sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport { Autocomplete, CircularProgress, styled, TextField } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst AutoComplete = styled(Autocomplete)(() => ({ width: 300 }));\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport default function AsyncAutocomplete() {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) return;\n\n    (async () => {\n      // *https://www.registers.service.gov.uk/registers/country/use-the-api*\n      const response = await axios.get(\n        \"https://country.register.gov.uk/records.json?page-size=5000\"\n      );\n      await sleep(3000); // For demo purposes.\n      const countries = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!open) setOptions([]);\n  }, [open]);\n\n  return (\n    <AutoComplete\n      open={open}\n      options={options}\n      loading={loading}\n      id=\"asynchronous-demo\"\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          fullWidth\n          variant=\"outlined\"\n          label=\"Asynchronous\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}