{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\mui-react-redux-toolkit-crud\\\\src\\\\app\\\\contexts\\\\NotificationContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOAD_NOTIFICATIONS\":\n      {\n        return {\n          ...state,\n          notifications: action.payload\n        };\n      }\n    case \"DELETE_NOTIFICATION\":\n      {\n        return {\n          ...state,\n          notifications: action.payload\n        };\n      }\n    case \"CLEAR_NOTIFICATIONS\":\n      {\n        return {\n          ...state,\n          notifications: action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst NotificationContext = /*#__PURE__*/createContext({\n  notifications: [],\n  deleteNotification: () => {},\n  clearNotifications: () => {},\n  getNotifications: () => {},\n  createNotification: () => {}\n});\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, []);\n  const deleteNotification = async notificationID => {\n    try {\n      const res = await axios.post(\"/api/notification/delete\", {\n        id: notificationID\n      });\n      dispatch({\n        type: \"DELETE_NOTIFICATION\",\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const clearNotifications = async () => {\n    try {\n      const res = await axios.post(\"/api/notification/delete-all\");\n      dispatch({\n        type: \"CLEAR_NOTIFICATIONS\",\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const getNotifications = async () => {\n    try {\n      const res = await axios.get(\"/api/notification\");\n      dispatch({\n        type: \"LOAD_NOTIFICATIONS\",\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const createNotification = async notification => {\n    try {\n      const res = await axios.post(\"/api/notification/add\", {\n        notification\n      });\n      dispatch({\n        type: \"CREATE_NOTIFICATION\",\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      getNotifications,\n      deleteNotification,\n      clearNotifications,\n      createNotification,\n      notifications: state.notifications\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n_c = NotificationProvider;\nexport default NotificationContext;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","axios","jsxDEV","_jsxDEV","reducer","state","action","type","notifications","payload","NotificationContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","children","_s","dispatch","notificationID","res","post","id","data","e","console","error","get","notification","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react/mui-react-redux-toolkit-crud/src/app/contexts/NotificationContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOAD_NOTIFICATIONS\": {\n      return { ...state, notifications: action.payload };\n    }\n\n    case \"DELETE_NOTIFICATION\": {\n      return { ...state, notifications: action.payload };\n    }\n\n    case \"CLEAR_NOTIFICATIONS\": {\n      return { ...state, notifications: action.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst NotificationContext = createContext({\n  notifications: [],\n  deleteNotification: () => {},\n  clearNotifications: () => {},\n  getNotifications: () => {},\n  createNotification: () => {}\n});\n\nexport const NotificationProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, []);\n\n  const deleteNotification = async (notificationID) => {\n    try {\n      const res = await axios.post(\"/api/notification/delete\", { id: notificationID });\n      dispatch({ type: \"DELETE_NOTIFICATION\", payload: res.data });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const clearNotifications = async () => {\n    try {\n      const res = await axios.post(\"/api/notification/delete-all\");\n      dispatch({ type: \"CLEAR_NOTIFICATIONS\", payload: res.data });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const getNotifications = async () => {\n    try {\n      const res = await axios.get(\"/api/notification\");\n      dispatch({ type: \"LOAD_NOTIFICATIONS\", payload: res.data });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const createNotification = async (notification) => {\n    try {\n      const res = await axios.post(\"/api/notification/add\", { notification });\n      dispatch({ type: \"CREATE_NOTIFICATION\", payload: res.data });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getNotifications();\n  }, []);\n\n  return (\n    <NotificationContext.Provider\n      value={{\n        getNotifications,\n        deleteNotification,\n        clearNotifications,\n        createNotification,\n        notifications: state.notifications\n      }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport default NotificationContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}